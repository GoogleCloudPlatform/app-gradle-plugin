/*
 * Copyright 2017 Google LLC. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

// add this into build.gradle buildscript.classpath if you want to use this script
// classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'

apply plugin: 'com.bmuschko.nexus'

modifyPom {
  project {
    name 'App Engine Gradle Plugin'
    description 'This Gradle plugin provides tasks to build and deploy Google App Engine applications.'
    url 'https://github.com/GoogleCloudPlatform/app-gradle-plugin'
    inceptionYear '2016'

    scm {
      url 'https://github.com/GoogleCloudPlatform/app-gradle-plugin'
      connection 'scm:https://github.com/GoogleCloudPlatform/app-gradle-plugin.git'
      developerConnection 'scm:git://github.com/GoogleCloudPlatform/app-gradle-plugin.git'
    }

    licenses {
      license {
        name 'The Apache Software License, Version 2.0'
        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
        distribution 'repo'
      }
    }

    developers {
      developer {
        id 'loosebazooka'
        name 'Appu Goundan'
        email 'appu@google.com'
      }
    }
  }
}

extraArchive {
  sources = true
  tests = false
  javadoc = true
}

gradle.taskGraph.whenReady { taskGraph ->
  if (taskGraph.allTasks.any { it.name.equals(project.nexus.getUploadTaskName()) }) {
    java.io.Console console = System.console()
    // something about the gradle cmdline output messed with the output ordering
    // so sleep a little so we appear after [building x%]
    sleep(200)

    def nexusUsername = readPropCmdLine(console, "nexus.username", "", "Sonatype Username")
    def nexusPassword = console.readPassword("Sonatype Password: ")

    project.ext.nexusUsername = nexusUsername
    project.ext.nexusPassword = new String(nexusPassword)
  }
}

// if you see a weird error pointing here, make sure you run upload with --no-daemon
// so stdin is good to go
def readPropCmdLine(console, property, defaultValue, msg) {
  def value = System.getProperty(property) ?: defaultValue
  value = console.readLine("$msg [${value}]:") ?: value
}
